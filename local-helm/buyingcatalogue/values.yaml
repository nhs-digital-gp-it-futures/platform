dbPassword:
clientSecret:

baseIsapiEnabledUrl: "https://localhost/"

azurite:
  enabled: true
  disabledUrl: "host.docker.internal"
  replicaCount: 1
  image:
    repository: mcr.microsoft.com/azure-storage/azurite  
  useLocalImage: false
  nameOverride: "azurite"
  fullnameOverride: "gpitfutures-bc-azurite"
  service:
    type: LoadBalancer
    blobPort: 10000  
    queuePort: 10001
    tablePort: 10002

dapi:
  enabled: true
  disabledUrl: "host.docker.internal"
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/document-dapi
  useLocalImage: false
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "dapi"
  fullnameOverride: "gpitfutures-bc-dapi"
  service:
    type: LoadBalancer
    port: 5101
  azureBlobStorage:    
    connectionSecret: 
      name: "bc-buyingcatalogue"
      key: azure-blob-connection-string
    containerName: container-1

bapi-db:
  enabled: true
  disabledUrl: "host.docker.internal"
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/debug-db
  useLocalImage: false
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "bapi-sql"
  fullnameOverride: "gpitfutures-bc-bapi-sql"
  service:
    type: LoadBalancer
    port: 1450
  saPasswordSecret: 
    name: "bc-buyingcatalogue"
    key: sa-password    
  dbName: buyingcatalogue
  dbUser: NHSD
  dbPasswordSecret: 
    name: "bc-buyingcatalogue"
    key: db-password    

bapi:  
  enabled: true
  disabledUrl: "host.docker.internal"
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/api
  useLocalImage: false
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "bapi"
  fullnameOverride: "gpitfutures-bc-bapi"
  service:
    type: LoadBalancer
    port: 5100
  serviceDependencies:  
    dapiUrlConfig:
      name: "bc-buyingcatalogue"
      key: dapi-url          
  connectionStringSecret: 
    name: "bc-buyingcatalogue"
    key: bapi-db-connection-string  

isapi-db:
  enabled: false
  disabledUrl: "host.docker.internal"
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/identity-api-user-db
  useLocalImage: false
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "isapi-sql"
  fullnameOverride: "gpitfutures-bc-isapi-sql"
  saPasswordSecret: 
    name: "bc-buyingcatalogue"
    key: sa-password    
  dbName: CatalogueUsers
  dbUser: NHSD
  dbPasswordSecret: 
    name: "bc-buyingcatalogue"
    key: db-password   
  insertTestData: true
  service:
    type: LoadBalancer
    port: 1451   

isapi:
  enabled: false
  disabledUrl: "docker.for.win.localhost"
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/identity-isapi
  useLocalImage: false
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "isapi"
  fullnameOverride: "gpitfutures-bc-isapi"
  service:
    type: LoadBalancer
    port: 5102      
  connectionStringSecret: 
    name: "bc-buyingcatalogue"
    key: isapi-db-connection-string 
  oidcClientSecret: 
    name: "bc-buyingcatalogue"
    key: oidc-client-secret 
  issuerUrlConfig: 
    name: "bc-buyingcatalogue"
    key: issuer-url 
  insertTestData: true
  clients: 
    - clientId: "SampleClient"
      clientName: "Main Node Client"
      allowedGrantTypes: "Code"
      allowOfflineAccess : false
      requireClientSecret : true
      secret: 
        name: "bc-buyingcatalogue"
        key: oidc-client-secret 
      requirePkce : true
      requireConsent: false
      redirectUrls: 
        - http://localhost:3000/oauth/callback
        - http://host.docker.internal:3000/oauth/callback
        - http://docker.for.win.localhost:3000/oauth/callback
        - http://docker.for.mac.localhost:3000/oauth/callback
        - http://localhost:3005/oauth/callback
        - http://host.docker.internal:3005/oauth/callback
        - http://docker.for.win.localhost:3005/oauth/callback
        - http://docker.for.mac.localhost:3005/oauth/callback
      postLogoutRedirectUrls: 
        - http://localhost:3000/signout-callback-oidc
        - http://host.docker.internal:3000/signout-callback-oidc
        - http://docker.for.win.localhost:3000/signout-callback-oidc
        - http://docker.for.mac.localhost:3000/signout-callback-oidc
        - http://localhost:3005/signout-callback-oidc
        - http://host.docker.internal:3005/signout-callback-oidc
        - http://docker.for.win.localhost:3005/signout-callback-oidc
        - http://docker.for.mac.localhost:3005/signout-callback-oidc
      allowedScopes: 
        - openid
        - email
        - profile
        - SampleResource  
        - Organisation
  ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - paths: 
        - /.well-known
        - /Account
        - /connect

file-loader:
  enabled: true
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/file-uploader
  useLocalImage: false
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "file-loader"
  fullnameOverride: "gpitfutures-bc-file-loader"
  azureBlobStorage:    
    connectionSecret: 
      name: "bc-buyingcatalogue"
      key: azure-blob-connection-string
    containerName: container-1

mp:
  enabled: true
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/marketingpage
  useLocalImage: false   
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "marketing-pages"
  fullnameOverride: "gpitfutures-bc-mp"
  service:
    type: LoadBalancer
    port: 3002
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
      - paths: 
          - /supplier
  serviceDependencies:    
    dapiUrlConfig:
      name: "bc-buyingcatalogue"
      key: dapi-url  
    bapiUrlConfig:
      name: "bc-buyingcatalogue"
      key: bapi-url  

pb: 
  enabled: false
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/publicbrowse 
  useLocalImage: false    
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "public-browse"
  fullnameOverride: "gpitfutures-bc-pb"
  service:
    type: LoadBalancer
    port: 3000
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
      - paths: 
          - /
    tls: []
  serviceDependencies:
    dapiUrlConfig:
      name: "bc-buyingcatalogue"
      key: dapi-url  
    bapiUrlConfig:
      name: "bc-buyingcatalogue"
      key: bapi-url  
    oidc:
      baseUriConfig:
        name: "bc-buyingcatalogue"
        key: isapi-url  
      clientId: "SampleClient"
      clientSecret: 
        name: "bc-buyingcatalogue"
        key: oidc-client-secret                
  baseUri: "https://localhost:3000"
  featureFlags:
    loginEnabled : "true"
    useCapabilitiesSelector: "true"


admin: 
  enabled: true
  replicaCount: 1
  image:
    repository: gpitfuturesdevacr.azurecr.io/nhsd/buying-catalogue/admin
  useLocalImage: false    
  imagePullSecrets: 
  - name: regcredlocal
  nameOverride: "admin"
  fullnameOverride: "gpitfutures-bc-admin"
  service:
    type: LoadBalancer
    port: 3005
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
      - host: localhost
        paths: 
          - /admin
    tls: []
  serviceDependencies:
    oidc:
      baseUriConfig:
        name: "bc-buyingcatalogue"
        key: isapi-url  
      clientId: "SampleClient"
      clientSecret: 
        name: "bc-buyingcatalogue"
        key: oidc-client-secret                
