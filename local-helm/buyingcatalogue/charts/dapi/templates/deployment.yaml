{{- $name := include "dapi.fullname" . -}}
{{- $cfgname := printf "%s-%s" "cfg" $name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dapi.fullname" . }}
  labels:
    {{- include "dapi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy: {{ toYaml .Values.updateStrategy | nindent 4 }}  
  selector:
    matchLabels:
      {{- include "dapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dapi.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "dapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- include "image.properties" . | nindent 10 }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ASPNETCORE_URLS
              value: http://0.0.0.0:80
            - name: AZUREBLOBSTORAGE__CONNECTIONSTRING
              valueFrom:
                  secretKeyRef:            
                    name: {{ .Values.azureBlobStorage.connectionSecret.name }}
                    key: {{ .Values.azureBlobStorage.connectionSecret.key }}
            - name: AZUREBLOBSTORAGE__CONTAINERNAME
              value:  {{ .Values.azureBlobStorage.containerName | quote }}
            {{- if .Values.env.values -}}
            {{- range .Values.env.values }}
              - name: {{ .name }}
                value: {{ .value | quote }}
            {{- end -}}
            {{- end -}}
            {{- if .Values.env.configmap -}}
            {{- range .Values.env.configmap }}
              - name: {{ .name }}
                valueFrom:
                  configMapKeyRef:
                    name: {{ $cfgname }}
                    key: {{ .key }}
            {{- end -}}
            {{- end }}
            {{- if .Values.env.secrets -}}
            {{- range .Values.env.secrets }}
              - name: {{ .name }}
                valueFrom:
                  secretKeyRef:            
                    name: {{ .valueFrom.secretKeyRef.name }}
                    key: {{ .valueFrom.secretKeyRef.key }}            
            {{- end -}}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
